<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>damage = 0;

targeted_counter = 0;

cursor = 0;

ds_list_add(global.menu_path, "party selector");

isConfirmed = false;
isCancelled = false;

//Variable for sin() animation function
angle = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (instance_exists(obj_cursor)){
    with(obj_cursor)
    {
        instance_destroy();
    }
}


ds_list_delete(global.menu_path, ds_list_size(global.menu_path) - 1);

if (isConfirmed == true)
{
instance_create(view_xview[0],view_yview[0],obj_character_status);
obj_character_status.selected_character = targeted_counter
}

instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(keyboard_check_pressed(vk_down))
    {
        targeted_counter++;
        angle = 0;
        audio_sound_gain(snd_boop,0.25,0)
        audio_play_sound(snd_boop,1,0)
        if (targeted_counter &gt; ds_list_size(global.party) -1){
        targeted_counter = 0
        }
        
    }
    
    else if (keyboard_check_pressed(vk_up))
    {
        if(targeted_counter == 0)
        {
        targeted_counter = ds_list_size(global.party) -1;
        angle = 0;
        audio_sound_gain(snd_boop,0.25,0)
        audio_play_sound(snd_boop,1,0)
        }
        else
        {
        targeted_counter--;
        angle = 0;
        audio_sound_gain(snd_boop,0.25,0)
        audio_play_sound(snd_boop,1,0)
        }
    }
    
//    global.targeted_enemy = ds_list_find_value(global.enemy, targeted_counter % ds_list_size(global.enemy));
    
    if(!instance_exists(obj_cursor))
    {
        cursor = instance_create(20,15, obj_cursor);
    }
    else if (cursor != 0)
    {
    angle -= 0.1;
        cursor.x = view_xview[0] + 220 + sin(angle)*12; //Speed left and right determined by angle, total distance travelled determined by multiplicand (*12).
        cursor.y = view_yview[0] + 20 + (100*targeted_counter);
    }
 

   
if(keyboard_check_pressed(vk_space))
{
    isConfirmed = true;
    audio_sound_gain(snd_bee2,0.25,0)
    audio_play_sound(snd_bee2,1,0)
    alarm[0] = 1;
}

if(keyboard_check_pressed(vk_shift))
{
    audio_sound_gain(snd_brrt,0.25,0);
    audio_play_sound(snd_brrt,1,0)
    isCancelled = true;
    alarm[0] = 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
