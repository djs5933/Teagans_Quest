<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_temp_enemy</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>hp=10
lvl = 1;
xp = 1;
base_dmg= 4 + 3*power(lvl -1, 2); // Monster damage
//this weapon value is hardcoded in now but will be 
//variable once we add weapon slots

weapon_dmg = 2;

                    //STRENGTH
STR = 8;           //Determines damage of melee attacks, requirement for weapon use

                    //DEFENSE
DEF = 8;            //Determines resistance to physical attacks

                    //Agility
AGI = 10;           //Determines Crit Chance, Dodge Chance and Turn Speed

                    //Vitality
VIT = 7;            //Determines HP
    
                    //Willpower
WIL = 6;            //Determines MP

                    //Luck
LCK = 4;            //Cannot be raised through level ups. Increases Crit Chance, Dodge, 
                    //Loot, Escape Chance and lowers chance of surprise attack.



ARMOR_RATING = 50;
alive=true;
name = "Generic Enemy";
time=false; // Ready to attack is set off by default
alarm[0]=150+irandom(50); // Time to attack, 4 seconds (30 = 1 SECOND)
checked=false; // checked means if obj_control_encounter should check if it's dead or not

isTurn = false;
depth = y * -1;

timer = 0;      //timer to make it so the enemies don't attack instantly

should_check_hp = true;
temp_damage = 0;
damaged_sprite = spr_temp_enemy;    //set which sprite it should change to when injured
default_sprite = spr_temp_enemy;

state = enemy_states.normal;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Attacking party when it's time

if (isTurn == true &amp;&amp; timer &gt; 85 &amp;&amp; alive = true)
{
    //set up random member of party to target
    show_debug_message("enemy attacks the party");
    target_index = irandom(ds_list_size(obj_battle_controller.active_party) -1);  //between  0 and size -1
    
    var target = ds_list_find_value(obj_battle_controller.active_party, target_index);
    
    attack_dmg = round((base_dmg + weapon_dmg) + STR/4 + (irandom(LCK + 3) -3)/4);
    attack_dmg -= round(((target.DEF) + irandom_range(-3,target.LCK) + target.ARMOR_RATING)/10);
    scr_damage(target, attack_dmg);
    scr_text(name + " hit the party for " + string(attack_dmg) + " damage!", 2, 350, 0, 60 );
    isTurn = false;
    timer = 0;
    obj_battle_controller.turn_counter++;
}

if(isTurn)
{
    timer++;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Checking itself to see if it's dead
if(should_check_hp == true)
{
    if(hp &lt;= 0)
    {
        alive = false;
        global.button--;
    }
}
if(alive == false)
{       

    //Add EXP to party.
    for (i = 0; i &lt; ds_list_size(global.party); i++){
    global.party[|i].xp += self.xp;
    }
    
    //remove this entry from the ds_list
    del_id = ds_list_find_index(global.enemy, id);
    
    show_debug_message(string(del_id));
    
    ds_list_delete(global.enemy, del_id);
    show_debug_message("Current size of list: " + string(ds_list_size(global.enemy)));
    
    //now delete the instance
    
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///state management
if(state == enemy_states.normal)
{
    sprite_index = default_sprite;
}
else if (state == enemy_states.damaged)
{
    sprite_index = damaged_sprite;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>-1</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>64,64</point>
    <point>64,64</point>
  </PhysicsShapePoints>
</object>
