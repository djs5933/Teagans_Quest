<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Depth Correction

depth = -1000000;   //want to ensure this is always drawn on top
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>switch(keyboard_key){
    
    case vk_space: // Select Button
    if(keyboard_check_pressed(vk_space))
    {
        if(global.menu_n=0)
        { // Attack, Magic, Run
            if (global.button=0){global.menu_n=2}
            if (global.button=1){global.menu_n=1}
            if (global.button=2)
            {
                //view_wview[0]=1280;
                //view_hview[0]=720;
                room_goto_previous();
                    for(i=0;i&lt;global.enemy_n;i+=1)
                    {
                        global.enemy[i]=0;
                    }
            }
            if(global.button = 3)
            {
            }
        }
    
        else if(global.menu_n=1)
        { // Fire I, Empty, Empty
            if (global.button=0){}
            if (global.button=1){}
            if (global.button=2){}
        }
        
        else if(global.menu_n=2)
        { // Attack Enemy[i]
            for(i=0;i&lt; ds_list_size(global.enemy);i+=1)
            {
                if( global.button == i)
                {
                    //with(global.enemy[i])
                    {
                    
                        target_enemy = ds_list_find_value(global.enemy, i);
                        //deal the actual damage
                        scr_damage(target_enemy,global.player_dmg+irandom(4)); 
                        
                        //tell battle control turn is over
                        obj_battle_controller.turn_counter++;
                        
                        //destroy the menu
                        global.menu_n = 0;
                        instance_destroy();
                    }
                    //else{if(attack_nxt=0&amp;&amp;global.button=i&amp;&amp;global.enemy[i].alive=true){global.menu_n=0 global.button=0 attack_nxt=1 to_attack=i}}
                }
            }
        }
    }
    break;
    case ord('Q'): // Go back to Attack, Magic, Run
        if (global.menu_n!=0){global.menu_n=0}break;

}

//if(attack_nxt=1&amp;&amp;global.que=0&amp;&amp;global.player_time&gt;=global.player_ttattack){attack_nxt=0 global.que=1 global.player_time=0 with(global.enemy[to_attack]){scr_damage(self,global.player_dmg+irandom(4));}}

/*
if(global.menu_n!=2){
if(global.button&gt;2){global.button=2}
if(global.button&lt;0){global.button=0}
}else{
if(global.button&gt;global.max_enemies){global.button=global.max_enemies}
if(global.button&lt;0){global.button=0}
}
*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// DRAW MENU_N=0

static_x=150
static_y = 200;

draw_rectangle_color(x,y,x + static_x, y + static_y,c_black,c_black,c_black,c_black,false);

if(global.menu_n=0){
if(global.button=0){menu_string_0[0]= "Attack &lt;-";}else{menu_string_0[0]= "Attack";}
if(global.button=1){menu_string_0[1]= "Magic &lt;-";}else{menu_string_0[1]= "Magic";}
if(global.button=2){menu_string_0[2]= "Run &lt;-";}else{menu_string_0[2]= "Run";}
if(global.button = 3) {menu_string_0[3] = "sadfrog &lt;-";}else{menu_string_0[3] = "sadfrog";}
}else if(global.menu_n=1){
if(global.button=0){menu_string_0[0]= "Fire I &lt;-";}else{menu_string_0[0]= "Fire I";}
if(global.button=1){menu_string_0[1]= "dickbutt &lt;-";}else{menu_string_0[1]= "dickbutt";}
if(global.button=2){menu_string_0[2]= "Empty &lt;-";}else{menu_string_0[2]= "Empty";}
}

//this handles drawing the arrows in front of the arrows in order to target them
else if(global.menu_n=2)
{
    for(i=0;i&lt; ds_list_size(global.enemy);i+=1)
    {
      
        temp_enemy = ds_list_find_value(global.enemy, i);
        
       // if (temp_enemy.alive == true)
        //{
            if(global.button=i)
            {
                menu_string_0[i]= " &lt;-";
            }
            else
            {
                menu_string_0[i]= " ";
            }

            draw_set_color(c_black);
            draw_text(temp_enemy.x+(string_length(menu_string_0[i])+128),temp_enemy.y,menu_string_0[i]);
            draw_set_color(c_white);
        //}
        
    }
}

constant_text_x=50;
constant_text_y=35;

if(global.menu_n!=2){
draw_text(x+(constant_text_x+(string_length(menu_string_0[0]))),y+(constant_text_y),menu_string_0[0]);
draw_text(x+(constant_text_x+(string_length(menu_string_0[1]))),y+(constant_text_y*2),menu_string_0[1]);
draw_text(x+(constant_text_x+(string_length(menu_string_0[2]))),y+(constant_text_y*3),menu_string_0[2]);
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
