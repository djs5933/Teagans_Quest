<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_temp_Teagan_still_Down</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_abstract_party</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();


///Initialize Variables
image_speed = 0.2;
state = player_States.overworld;
name = "Teag";

is_Enemy = false; //scr_damage testing variable

var old_x = 0;
var old_y = 0;

current_portrait = spr_portrait_Teagan_normal;

//direction value from 0- 3
/*
    0 = down
    1 = left
    2 = up
    3 = right
*/
card_direction = 0;

//moving state
/*
    0 = not moving (standing still)
    1 = moving (key being pressed)
*/
moving = 0;

locked = false;




//TO DO:
//MAKE THIS READABLE FROM A SAVE FILE TO ENABLE SAVING


/*this section will define the attributes used by this character in battle
    They will be copied onto the battle version of the character
    and then copied back over once the battle is over
*/


//HEALTH MP AND TP SECTION
hp_max = 50;
hp = 50;
mp_max = 34;
mp = 34;
xp_max = 6;
xp = 0;

//THIS IS HARDCODED IN BUT WILL EVENTUALLY BE GOTTEN FROM WEAPON SLOT
weapon_dmg = 5;
//LEVEL SECTION
lvl = 1;
base_dmg = 10 + 4*power(lvl -1, 2);
//TO DO: MAKE THESE AFFECT CALCULATIONS
//ATTRIBUTES SECTION

                    //STRENGTH
STR = 12;           //Determines damage of melee attacks, requirement for weapon use

                    //DEFENSE
DEF = 12;            //Determines resistance to physical attacks

                    //Agility
AGI = 10;           //Determines Crit Chance, Dodge Chance and Turn Speed

                    //Vitality
VIT = 7;            //Determines HP
    
                    //Willpower
WIL = 6;            //Determines MP

                    //Luck
LCK = 8;            //Cannot be raised through level ups. Increases Crit Chance, Dodge, 
                    //Loot, Escape Chance and lowers chance of surprise attack.


                    
//EQUIPMENT SLOT SECTION

weapon_slot = 0;
helm_slot = 0;
armor_slot = 0;
accessory_slot = 0;

weapon_slot = instance_create(0, 0, obj_test_weapon);
helm_slot = instance_create(0, 0, obj_test_helm);
armor_slot = instance_create(0,0, obj_test_armor);
accessory_slot = instance_create(0,0, obj_test_accessory);


ARMOR_RATING = 0;
if(weapon_slot != 0)
{
    weapon_dmg = weapon_slot.damage_rating;
    
}

if(helm_slot != 0)
{
    ARMOR_RATING += helm_slot.armor_rating;
    
}    
if(armor_slot != 0)
{
    ARMOR_RATING += armor_slot.armor_rating;
      
}
    
if(accessory_slot != 0)
{
    ARMOR_RATING += accessory_slot.armor_rating;
       
}


is_Turn = false;    //this variable tells whether or not it is the party member's turn
alive = true;

damage = base_dmg + weapon_dmg;
name = "Teagan";

battle_started = true;


//TEMPORARY MENU-TESTING SPELL LIST
magic_list = ds_list_create()
ds_list_add(magic_list, obj_spell)
ds_list_add(magic_list, obj_spell2);
ds_list_add(magic_list, obj_spellAll);
ds_list_add(magic_list, obj_spell);

scr_character_autoload(obj_temp_Teagan);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///inherit timed hits checking
event_inherited();
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///manage states- Battle mode
if(state == player_States.battle)
{
    //phy_position_x = x;
    //phy_position_y = y;
    sprite_index = spr_temp_Teagan_battle;
    
  
    if(weapon_slot != 0)
    {
        with (weapon_slot)
        {
            weapon_dmg = damage_rating;
            alarm[0] = 1;                   //activate any special abilities
        }
       
    }

    if(helm_slot != 0)
    {
        with(helm_slot)
        {
            //ARMOR_RATING += armor_rating;
            alarm[0] = 1;
        }
        //ARMOR_RATING += helm_slot.armor_rating;
        //helm_slot.alarm[0] = 1;
    }    
    if(armor_slot != 0)
    {
        with (armor_slot)
        {
            //ARMOR_RATING += armor_rating;
            alarm[0] = 1;
        }
        
        //ARMOR_RATING += armor_slot.armor_rating;
        //armor_slot.alarm[0] = 1;   
    }
    
    if(accessory_slot != 0)
    {
        with (accessory_slot)
        {
            //ARMOR_RATING += armor_rating;
            alarm[0] = 1;
        } 
        //ARMOR_RATING += accessory_slot.armor_rating;
        //accessory_slot.alarm[0] = 1;   
    }


}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(state == player_States.overworld)
{
    
    old_x = x;
    old_y = y;
    ///Handle sprite directions and movement
    depth = phy_position_y * -1;
    phy_fixed_rotation = true;
    //check if keys are pressed and change direction
    if(locked == false)
    {
        if(keyboard_check(vk_left))
        {
            card_direction = 1;
            moving = 1;
        }   
        else if (keyboard_check(vk_down))
        {
            card_direction = 0;
            moving = 1;
        }
        else if (keyboard_check(vk_up))
        {
            card_direction = 2;
            moving = 1;
        }

        else if (keyboard_check(vk_right))
        {
            card_direction = 3;
            moving = 1; 
        }
        else
        {
            moving = 0;
    }   
    //if not moving
    //check direction and set sprite accordingly
    if(moving == 0)
    {
        if(card_direction == 0)         //facing down
        {
            sprite_index = spr_temp_Teagan_still_Down;
        }
    
        else if (card_direction == 1)  //facing left
        {
            sprite_index = spr_temp_Teagan_still_Left;
        }
    
        else if (card_direction == 2)   //facing up
        {
            sprite_index = spr_temp_Teagan_still_Up;
        }
    
        else if (card_direction == 3)   //facing right
        {
            sprite_index = spr_temp_Teagan_still_Right;
        }
    }

    else            //moving = 1, key being pressed
    {
        
        scr_encounter_random(obj_slime);
        if(card_direction == 0)         //facing down
        {
            sprite_index = spr_temp_Teagan_Down;
            phy_position_y += 2;
        }
    
        else if (card_direction == 1)  //facing left
        {
            sprite_index = spr_temp_Teagan_left;
            phy_position_x -=2;
        }
    
        else if (card_direction == 2)   //facing up
        {
            sprite_index = spr_temp_Teagan_Up;
            phy_position_y -= 2;
        }
    
        else if (card_direction == 3)   //facing right
        {
            sprite_index = spr_temp_Teagan_Right;
            phy_position_x += 2;
        }
        
      
    }
}
}


//LEVELING
if (xp &gt;= xp_max){
lvl += 1;
xp = 0;
STR *= 2;
xp_max *= 2;
}

//Opening the Party Menu
if (!instance_exists(obj_party_display) &amp;&amp; state == player_States.overworld){
    if keyboard_check_pressed(vk_tab){
    audio_play_sound(snd_scratch,1,0)
    locked = true;
    image_speed = 0;
    instance_create(view_xview[0],view_yview[0],obj_party_display)
    }
    
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Timed Hits Control
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="collidable">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Collide
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();
draw_text(x,y+100,string(xp) + "/" + string(xp_max));
draw_text(x,y+120,string(lvl));

draw_text(x,y+140,string(charge_counter));
draw_text(x,y+160,string(whiffed));

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>-1</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>1</PhysicsObjectShape>
  <PhysicsObjectDensity>0.100000001490116</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>8,32</point>
    <point>24,32</point>
    <point>24,56</point>
    <point>8,56</point>
  </PhysicsShapePoints>
</object>
